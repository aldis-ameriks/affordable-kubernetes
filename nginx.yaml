apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - image: nginx:1.15.6-alpine
        name: nginx
        ports:
        - name: http
          containerPort: 80
          hostPort: 80
        volumeMounts:
        - name: "config"
          mountPath: "/etc/nginx"
        - name: "certs"
          mountPath: "/etc/ssl"
      volumes:
      - name: config
        configMap:
          name: nginx-conf
      - name: certs
        secret:
          secretName: nginx-certs
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    worker_processes 1;
    error_log /dev/stdout info;

    events {
      worker_connections 10;
    }

    http {

    log_format apm '"$time_local" client=$remote_addr '
                   'method=$request_method request="$request" '
                   'request_length=$request_length '
                   'status=$status bytes_sent=$bytes_sent '
                   'body_bytes_sent=$body_bytes_sent '
                   'referer=$http_referer '
                   'user_agent="$http_user_agent" '
                   'upstream_addr=$upstream_addr '
                   'upstream_status=$upstream_status '
                   'request_time=$request_time '
                   'upstream_response_time=$upstream_response_time '
                   'upstream_connect_time=$upstream_connect_time '
                   'upstream_header_time=$upstream_header_time';

      access_log /dev/stdout apm;

      map $http_upgrade $connection_upgrade {
          default upgrade;
          '' close;
      }

      server {
        listen 80;
        listen 443 ssl;

        ssl_certificate /etc/ssl/cloudflare.crt;
        ssl_certificate_key /etc/ssl/cloudflare.key;

        location /grafana/ {
          proxy_pass http://grafana.default.svc.cluster.local:3000/;
          proxy_redirect off;
        }

        location /sensor/ {
          proxy_pass http://data-backend.default.svc.cluster.local:8080/;
          proxy_redirect off;
        }

        location /hangman/api/ {
          proxy_pass http://hangman-backend.default.svc.cluster.local:4000/;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $connection_upgrade;
        }

        location /hangman/ {
          proxy_pass http://hangman-client.default.svc.cluster.local:80/;
        }
      }
    }
